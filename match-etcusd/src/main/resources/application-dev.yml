server:
  port: 9090

spring:
  kafka:
    bootstrap-servers: 10.10.10.146:9092
    consumer:
      group.id: matchGroup
      client.id: matchGroup
      enable.auto.commit: true
      auto.commit.interval.ms: 1000
      session.timeout.ms: 30000
      key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      servers: 10.10.10.146:9092
      retries: 3
      batch.size: 1000
      linger: 1
      buffer.memory: 40960
      topic: match_trade_TRXETH
  redis:
    host: 127.0.0.1
    port : 6379       # Redis服务器连接端口
    password :        # Redis服务器连接密码（默认为空）
    pool:
      max-active : -1  # 连接池最大连接数（使用负值表示没有限制）
      max-idle : 8    # 连接池中的最大空闲连接
      max-wait : -1   # 连接池最大阻塞等待时间（使用负值表示没有限制）
      min-idle : 0    # 连接池中的最小空闲连接


swirly:
  kafka:
    topic: match_trade_      #match_trade_TRXETH
  redis:
    key:
      trade.idGen: swirly:trade:idGen                #撮合交易id生成器 swirly:trade:id
    createOrder.list: swirly:createOrder:list:%s     #当前委托订单key swirly:createOrder:list:{market}
    createOrder.detail: swirly:createOrder:hash:%s   #当前委托订单明细 swirly:order:hash:{market}:{orderId}
    cancelOrder.list: swirly:cancelOrder:list:%s     #撤销订单 swirly:cancelOrder:list:{market}
    sendMsgError.hash: swirly:sendMsgError:hash:%s   #发送 swirly:sendMsgError:list:{market}
  market: ETHUSD
  strategy: limitMatchStrategy
  cron:
    cancelOrderCleanTask: 0 10 * * * ?
    kafkaMsgRetryTask: 0/30 * * * * ?

rifles:
  redis:
    system:
      door: rifles:door:%s    #系统开关  rifles:door:{market}

#日志配合·标准
logging:
  config: classpath:logback-boot.xml

